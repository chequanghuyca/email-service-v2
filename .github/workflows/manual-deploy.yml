name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
      app_name:
        description: 'Custom app name (optional)'
        required: false
        type: string

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  manual-deploy:
    name: Manual Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run tests
        run: bun run test

      - name: Build application
        run: bun run build

      - name: Setup Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Determine app name
        id: app-name
        run: |
          if [ "${{ github.event.inputs.app_name }}" != "" ]; then
            echo "app_name=${{ github.event.inputs.app_name }}" >> $GITHUB_OUTPUT
          else
            echo "app_name=email-service-v2" >> $GITHUB_OUTPUT
          fi

      - name: Create app if needed
        run: |
          flyctl apps list | grep -q "${{ steps.app-name.outputs.app_name }}" || flyctl apps create "${{ steps.app-name.outputs.app_name }}"

      - name: Deploy
        run: |
          # Update fly.toml with correct app name
          sed "s/app = \"email-service-v2\"/app = \"${{ steps.app-name.outputs.app_name }}\"/" fly.toml > fly-deploy.toml

          # Deploy
          flyctl deploy --config fly-deploy.toml --app "${{ steps.app-name.outputs.app_name }}"

      - name: Post deployment info
        run: |
          echo "✅ Deployment successful!" >> $GITHUB_STEP_SUMMARY
          echo "🌍 App URL: https://${{ steps.app-name.outputs.app_name }}.fly.dev" >> $GITHUB_STEP_SUMMARY
          echo "📊 API Docs: https://${{ steps.app-name.outputs.app_name }}.fly.dev/api/docs" >> $GITHUB_STEP_SUMMARY
          echo "🏥 Health Check: https://${{ steps.app-name.outputs.app_name }}.fly.dev/api" >> $GITHUB_STEP_SUMMARY
